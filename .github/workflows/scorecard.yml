name: OpenSSF Scorecard
on:
  # Run on all pushes to the default branch, and on all pull requests.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Also run weekly to pick up any security updates
  schedule:
    - cron: '0 2 * * 0'
  # Allow manual runs
  workflow_dispatch:

# Declare default permissions as read only
permissions: read-all

jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload results to code-scanning dashboard
      security-events: write
      # Needed to publish results
      id-token: write
      # Uncomment the permissions below if installing the Scorecard Action from GitHub Marketplace
      # actions: read
      # contents: read

    steps:
      - name: "Checkout code"
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          persist-credentials: false

      - name: "Run analysis"
        uses: ossf/scorecard-action@62b2cac7ed8198b15735ed49ab1e5cf35480ba46 # v2.4.0
        with:
          results_file: results.sarif
          results_format: sarif
          # Publish results to OpenSSF REST API
          publish_results: true
          # Don't fail the action on low scores - we just want to monitor
          # Setting repo_token but the action will continue regardless of score
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      # Upload the results as artifacts (optional). Useful for debugging
      - name: "Upload artifact"
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      # Upload the results to GitHub's code scanning dashboard (optional).
      # This will show security issues in the Security tab
      - name: "Upload SARIF results to code scanning"
        uses: github/codeql-action/upload-sarif@6db8d6351fd0be61f9ed8ebd12ccd35dcec51fea # v3.26.11
        with:
          sarif_file: results.sarif
        # Continue even if upload fails - don't break the workflow
        continue-on-error: true